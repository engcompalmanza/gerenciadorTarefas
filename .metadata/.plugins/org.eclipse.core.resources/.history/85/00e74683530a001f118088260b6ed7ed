package com.cjhsoftware.gerenciadorApi.domain.repository;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Optional;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import com.cjhsoftware.gerenciadorApi.domain.model.Projeto;
import com.cjhsoftware.gerenciadorApi.domain.model.StatusTarefa;
import com.cjhsoftware.gerenciadorApi.domain.model.Tarefa;

@DataJpaTest
@ActiveProfiles("test")
public class TarefaRepositoryTest {
	
	@Autowired
	ProjetoRepository projetoRepository;
	
	@Autowired
	TarefaRepository tarefaRepository;
	
	Projeto projeto;
	Tarefa tarefa;

	@BeforeEach
	void setUp() {
		projeto = new Projeto(1L, "Projeto do carro", "Projeto da fabricação de um carro");
		tarefa = new Tarefa(null, "Aerodinamica", "Estudar a aerodinamica do carros", new Date(), StatusTarefa.PENDENTE, true, projeto ));
	}
	
	@Test
	@DisplayName("Usa o repositorio para salvar uma entidade de Projeto no banco de dados")
	void SalvaNoBDcomSucesso() {
		assertEquals(0, projetoRepository.count());
		
		this.projetoRepository.save(projeto);
		
		assertEquals(1, projetoRepository.count());
		assertThat(projetoRepository.findById(projeto.getId())).isEqualTo(Optional.of(projeto));
	}

}
